{"mappings":"MAAMA,eACJC,QAAU,kBACEC,SAAEA,EAAQC,WAAEA,IACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAElBC,KAAKC,KAAOC,SAASC,cAAa,GAAIH,KAAKF,gCAC3CE,KAAKI,MAAQF,SAASC,cAAa,GAC9BH,KAAKF,iCAEVE,KAAKK,KAAOH,SAASC,cAAa,GAAIH,KAAKF,gCAC3CE,KAAKM,KAAOJ,SAASC,cAAa,GAAIH,KAAKF,gCAE7CS,IAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAEnCC,eAAeC,GASb,MAAO,CAAEX,KARID,KAAKO,IAAIM,KAAKC,MAAMF,EAAY,QAQ9BR,MAPDJ,KAAKO,IACjBM,KAAKC,MAAOF,EAAY,MAAyB,OAM7BP,KAJTL,KAAKO,IAChBM,KAAKC,MAAOF,EAAY,KAAoB,MAGlBN,KADfN,KAAKO,IAAIM,KAAKC,MAAOF,EAAY,IAAc,OAG9DG,aAAYd,KAAEA,EAAIG,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IAC/BN,KAAKC,KAAKe,YAAW,GAAMf,IAC3BD,KAAKI,MAAMY,YAAW,GAAMZ,IAC5BJ,KAAKK,KAAKW,YAAW,GAAMX,IAC3BL,KAAKM,KAAKU,YAAW,GAAMV,IAE7BW,aACEjB,KAAKH,QAAUqB,aAAW,KACxB,MAAMC,EAAcC,KAAKC,MACnBT,EAAWZ,KAAKD,WAAaoB,EACnC,GAAIP,EAAW,EAAG,OAAOZ,KAAKsB,UAAUtB,KAAKH,SAC7CG,KAAKe,YAAYf,KAAKW,eAAeC,MACpC,KAELU,UAAUC,GACRC,cAAcD,GACdE,MAAM,mBAKV,MAAMC,cAAgB,IAAI9B,eAAe,CACvCE,SAAU,WACVC,WAAY,IAAIqB,KAAK,0BAEvBM,cAAcT,aACd,MAAMU,eAAiB,IAAI/B,eAAe,CACxCE,SAAU,WACVC,WAAY,IAAIqB,KAAK,0BAEvBO,eAAeV","sources":["js/index.js"],"sourcesContent":["class CountdownTimer {\n  timerId = null;\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n\n    this.days = document.querySelector(`${this.selector} [data-value=\"days\"]`);\n    this.hours = document.querySelector(\n      `${this.selector} [data-value=\"hours\"]`\n    );\n    this.mins = document.querySelector(`${this.selector} [data-value=\"mins\"]`);\n    this.secs = document.querySelector(`${this.selector} [data-value=\"secs\"]`);\n  }\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n  getTimerValues(timeDiff) {\n    const days = this.pad(Math.floor(timeDiff / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(\n      Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60))\n    );\n    const secs = this.pad(Math.floor((timeDiff % (1000 * 60)) / 1000));\n    return { days, hours, mins, secs };\n  }\n  updatetimer({ days, hours, mins, secs }) {\n    this.days.textContent = `${days}`;\n    this.hours.textContent = `${hours}`;\n    this.mins.textContent = `${mins}`;\n    this.secs.textContent = `${secs}`;\n  }\n  startTimer() {\n    this.timerId = setInterval(() => {\n      const currentDate = Date.now();\n      const timeDiff = this.targetDate - currentDate;\n      if (timeDiff < 0) return this.stopTimer(this.timerId);\n      this.updatetimer(this.getTimerValues(timeDiff));\n    }, 250);\n  }\n  stopTimer(id) {\n    clearInterval(id);\n    alert(\"HAPPY BIRTHDAY\");\n  }\n}\n\n\nconst awersomeTimer = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Jul 24 2022 00:00:00\"),\n});\nawersomeTimer.startTimer();\nconst awersomeTimer2 = new CountdownTimer({\n  selector: \"#timer-2\",\n  targetDate: new Date(\"Aug 14 2022 00:00:00\"),\n});\nawersomeTimer2.startTimer();\n"],"names":["CountdownTimer","timerId","selector","targetDate","this","days","document","querySelector","hours","mins","secs","pad","value","String","padStart","getTimerValues","timeDiff","Math","floor","updatetimer","textContent","startTimer","setInterval","currentDate","Date","now","stopTimer","id","clearInterval","alert","awersomeTimer","awersomeTimer2"],"version":3,"file":"index.03c54027.js.map"}